buildscript {
    repositories {
        maven { url 'https://repo.spring.io/milestone' }
        maven { url 'https://repo.spring.io/snapshot' }
        gradlePluginPortal()
    }
    dependencies {
        classpath "org.springframework.boot:spring-boot-gradle-plugin:${springBootVersion}"
        classpath "io.spring.gradle:dependency-management-plugin:$springDependencyManagementPlugin"
    }
}

apply plugin: 'org.springframework.boot'
apply plugin: 'io.spring.dependency-management'

repositories {
    mavenCentral()
    maven { url 'https://repo.spring.io/milestone' }
    maven { url 'https://repo.spring.io/snapshot' }
    maven { url "https://oss.sonatype.org/content/repositories/snapshots" }
}

configurations {
    implementation {
        // see gh-1599; pause detection is not configured so this dependency can be excluded
        exclude module: 'LatencyUtils'
    }
}

dependencies {
    implementation 'org.springframework.boot:spring-boot-starter-web'
    implementation 'org.springframework.boot:spring-boot-starter-actuator'
    implementation 'org.springframework.boot:spring-boot-starter-jdbc'

    implementation 'io.micrometer:micrometer-registry-prometheus'
    implementation "io.micrometer:micrometer-tracing-bridge-${project.hasProperty("brave") ? "brave" : "otel" }"
    // Default is OTel + Zipkin. You can opt in via "wavefront" to Wavefront and "brave" for Brave
    if (project.hasProperty("wavefront")) {
        implementation "io.micrometer:micrometer-tracing-reporter-wavefront"
    }
    if (project.hasProperty("brave")) {
        implementation 'io.zipkin.reporter2:zipkin-reporter-brave'
    }
    else {
        implementation "io.opentelemetry:opentelemetry-exporter-zipkin"
    }

    implementation 'net.ttddyy.observation:datasource-micrometer-spring-boot:1.+'

    runtimeOnly 'org.flywaydb:flyway-core'
    runtimeOnly 'com.h2database:h2'

    testImplementation platform('org.testcontainers:testcontainers-bom:1.+')
    testImplementation 'org.springframework.boot:spring-boot-starter-test'
    testImplementation 'io.rest-assured:rest-assured'
    testImplementation 'org.testcontainers:junit-jupiter'
    testImplementation 'org.testcontainers:selenium'
    testImplementation 'org.seleniumhq.selenium:selenium-chrome-driver:4.+'
    testImplementation 'org.awaitility:awaitility'
}
